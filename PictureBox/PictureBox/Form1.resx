<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>